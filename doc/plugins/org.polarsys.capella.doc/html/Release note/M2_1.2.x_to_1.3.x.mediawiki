= Metamodel changes =

== From Capella 1.2.x to 1.3.x ==

=== Modification of all NSURI ===

* http://www.polarsys.org/capella/core/.../1.2.0 to http://www.polarsys.org/capella/core/.../1.3.0
* http://www.polarsys.org/capella/common/.../1.2.0 to http://www.polarsys.org/capella/common/.../1.3.0

=== [Bugzilla 2092][M2] Add annotations in Capella M2 to specify queries for derived features ===

The existing annotation http://www.polarsys.org/capella/derived as been enhanced by adding Viatra implementation information. It describes how the derived reference can be computed using Viatra queries.

It is based on two added details on the annotation:

* viatra.expression, describing how the derived reference is implemented.
* viatra.variant, describing which kind of implementation is described in the expression. (alias, opposite, patternbody, freeform, unimplemented)

According to the value of viatra.variant, a Viatra pattern can be created for the given derived reference:

[[Image:../Images/viatra.png]]

For a TypeA, referencing TypeB by the derived reference containing such annotation. TypeA.reference:TypeB, reference is computed by:

{|
!viatra.variant
!viatra.expression
!implied pattern
|-
|alias
|referenceName
|
 pattern (self: TypeA, target: TypeB) { 
  TypeA.referenceName(self, target) 
 }
|-
|opposite
|referenceName 
|
 pattern (self: TypeA, target: TypeB) {
   TypeB.referenceName(target, self) 
 }
|-
|patternbody
|expression 
|
 pattern (self: TypeA, target: TypeB) {
  expression
 } 
|-
|freeform
|expression
|
 expression
|-
|unimplemented
|N/A 
|
 N/A (this reference is not implemented/implementable by a Viatra pattern) 
|}
