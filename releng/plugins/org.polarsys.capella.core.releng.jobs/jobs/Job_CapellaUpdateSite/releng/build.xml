<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Eclipse EGF
-->
<project name="project" default="all">
    <property environment="env" />

	<property name="relengDir" value="${basedir}"/>
	<tstamp>
		<format property="myTimestamp" pattern="yyyyMMdd-HHmm"/>
	</tstamp>

    <condition property="build.root" value="${env.WORKSPACE}">
        <isset property="env.WORKSPACE" />
    </condition>
    <condition property="tools" value="${env.tools}">
        <isset property="env.tools" />
    </condition>
    <condition property="result" value="${env.result}">
        <isset property="env.result" />
    </condition>
    <condition property="publish" value="${env.publish}">
        <isset property="env.publish" />
    </condition>
    <condition property="workspace" value="${env.ECLIPSE_WORKSPACE}">
        <isset property="env.ECLIPSE_WORKSPACE" />
    </condition>
    <condition property="timestamp" value="${env.BUILD_ID}">
        <isset property="env.BUILD_ID" />
    </condition>
    <condition property="VERSION" value="${env.VERSION}">
        <isset property="env.VERSION" />
    </condition>
    <condition property="buildVersion" value="${env.buildVersion}">
        <isset property="env.buildVersion" />
    </condition>
    <condition property="qualifier.replacement.*" value="${env.qualifier.replacement.*}">
        <isset property="env.qualifier.replacement.*" />
    </condition>
    <condition property="branch" value="${env.branch}">
        <isset property="env.branch" />
    </condition>
    <condition property="capellaGitRepo" value="${env.capellaGitRepo}">
        <isset property="env.capellaGitRepo" />
    </condition>
    <condition property="eclipse.download.prefix" value="${env.eclipse.download.prefix}">
        <isset property="env.eclipse.download.prefix" />
    </condition>
    <condition property="cloudsmith.download.prefix" value="${env.cloudsmith.download.prefix}">
        <isset property="env.cloudsmith.download.prefix" />
    </condition>
    <condition property="polarion.download.prefix" value="${env.polarion.download.prefix}">
        <isset property="env.polarion.download.prefix" />
    </condition>
    <condition property="cots.repository.prefix" value="${env.cots.repository.prefix}">
        <isset property="env.cots.repository.prefix" />
    </condition>
    <condition property="site_QueryLegacy" value="${env.site_QueryLegacy}">
        <isset property="env.site_QueryLegacy" />
    </condition>
    <condition property="site_DiffMerge" value="${env.site_DiffMerge}">
        <isset property="env.site_DiffMerge" />
    </condition>
    <condition property="site_Patterns" value="${env.site_Patterns}">
        <isset property="env.site_Patterns" />
    </condition>
    <condition property="site_Kitalpha" value="${env.site_Kitalpha}">
        <isset property="env.site_Kitalpha" />
    </condition>

    <property file="build.properties" />

    <!-- This macro executes the default application of an eclipse installation that resides
         in the folder ${buildtools}/@app
      -->
    <macrodef name="eclipse.launch">
        <attribute name="app" />
        <attribute name="workspace" default="${workspace}" />
        <element name="args" optional="true" />
        <sequential>
            <!-- We assume that the eclipse installation is beneath ${tools} -->
            <property name="@{app}.deploy.dir" value="${tools}/@{app}" />

            <!-- Find the Eclipse launcher and assing its location to the @{app}.launcher property -->
            <pathconvert property="@{app}.launcher">
                <first count="1">
                    <sort>
                        <fileset dir="${@{app}.deploy.dir}/plugins" includes="**/org.eclipse.equinox.launcher_*.jar" />
                        <reverse xmlns="antlib:org.apache.tools.ant.types.resources.comparators">
                            <date />
                        </reverse>
                    </sort>
                </first>
            </pathconvert>

			<!-- Copy Eclipse Variables preferences -->
			<copy file="${relengDir}/templates/org.eclipse.core.variables.prefs"
				toFile="@{workspace}/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.core.variables.prefs"/>

            <!-- Launch the eclipse application -->
            <java fork="true" jar="${@{app}.launcher}" dir="${@{app}.deploy.dir}" failonerror="true">
                    <jvmarg value="-Xmx1024m"/>
                    <jvmarg value="-XX:MaxPermSize=256m"/>

	                <jvmarg value="-DrelengDir=relengDir"/>
	                <jvmarg value="-Dbuild.root=${build.root}"/>
	                <jvmarg value="-Dtools=${tools}"/>
	                <jvmarg value="-Dresult=${result}"/>
	                <jvmarg value="-Dpublish=${publish}"/>
	                <jvmarg value="-Dworkspace=${workspace}"/>
	                <jvmarg value="-Dtimestamp=${timestamp}"/>
	                <jvmarg value="-DVERSION=${VERSION}"/>
	                <jvmarg value="-DbuildVersion=${buildVersion}"/>
	                <jvmarg value="-Dqualifier.replacement.*=${qualifier.replacement.*}"/>
	                <jvmarg value="-Dbranch=${branch}"/>
	                <jvmarg value="-DcapellaGitRepo=${capellaGitRepo}"/>
	                <jvmarg value="-Declipse.download.prefix=${eclipse.download.prefix}"/>
	                <jvmarg value="-Dcloudsmith.download.prefix=${cloudsmith.download.prefix}"/>
	                <jvmarg value="-Dpolarion.download.prefix=${polarion.download.prefix}"/>
	                <jvmarg value="-Dcots.repository.prefix=${cots.repository.prefix}"/>
	                <jvmarg value="-Dsite_QueryLegacy=${site_QueryLegacy}"/>
	                <jvmarg value="-Dsite_DiffMerge=${site_DiffMerge}"/>
	                <jvmarg value="-Dsite_Patterns=${site_Patterns}"/>
	                <jvmarg value="-Dsite_Kitalpha=${site_Kitalpha}"/>
                    <arg value="-data" />
                    <arg value="@{workspace}" />
                <args />
            </java>
        </sequential>
    </macrodef>
    <target name="install.director">
        <available file="${tools}/director/director" property="director.exists" />
        <antcall target="do.install.director" />
    </target>
    
    <target name="do.install.director" unless="director.exists">
        <echo message="Fetching headless director application" />
        <tempfile destdir="${java.io.tmpdir}" prefix="director-" suffix=".zip" property="director.zip" deleteonexit="true" />
        <get src="${director.url}" dest="${director.zip}" />
        <mkdir dir="${tools}" />
        <unzip src="${director.zip}" dest="${tools}" />
        <delete file="${director.zip}" />
    </target>
    <target name="install.buckminster">
        <available file="${tools}/buckminster/buckminster" property="buckminster.exists" />
        <antcall target="do.install.buckminster" />
	</target>
	
    <target name="do.install.buckminster" unless="buckminster.exists" depends="install.director">
        <echo message="Configuring headless buckminster with needed features" />
        <echo message="Headless site: ${bm.headless.site}" />
        <echo message="External site: ${bm.external.site}" />
        <eclipse.launch app="director">
            <args>
                <jvmarg value="-Declipse.p2.mirrors=false" />
                <arg value="-r" />
                <arg value="${bm.headless.site}" />
                <arg value="-d" />
                <arg value="${tools}/buckminster" />
                <arg value="-p" />
                <arg value="Buckminster" />
                <arg value="-i" />
                <arg value="org.eclipse.buckminster.cmdline.product" />
                <arg value="-i" />
                <arg value="org.eclipse.buckminster.core.headless.feature.feature.group" />
                <arg value="-i" />
                <arg value="org.eclipse.buckminster.pde.headless.feature.feature.group" />
            </args>
        </eclipse.launch>
    </target>
        <target name="install.egf">
        <available file="${tools}/egf/eclipse.ini" property="egf.exists" />
        <antcall target="do.install.egf" />
	</target>

	<target name="do.install.egf" unless="egf.exists" depends="install.director">
        <echo message="Configuring EGF with needed features" />
        <echo message="EGF site: ${egf.site}" />
        <echo message="EGF eclipse site: ${egf.eclipse.site}" />
        <eclipse.launch app="director">
            <args>
                <jvmarg value="-Declipse.p2.mirrors=false" />
                <arg value="-r" />
                <arg value="${egf.site}" />
                <arg value="-r" />
                <arg value="${egf.eclipse.site}" />
                <arg value="-d" />
                <arg value="${tools}/egf" />
                <arg value="-p" />
                <arg value="EGF" />
                <arg value="-i" />
                <arg value="org.eclipse.platform.ide" />
                <arg value="-i" />
                <arg value="org.eclipse.egf.feature.group" />
                <arg value="-i" />
                <arg value="org.eclipse.egf.portfolio.feature.group" />
                <arg value="-i" />
                <arg value="org.eclipse.egf.portfolio.emf.feature.group" />
                <arg value="-i" />
                <arg value="org.eclipse.egf.portfolio.genchain.feature.group" />
            </args>
        </eclipse.launch>
    </target>
    <macrodef name="buckminster">
        <attribute name="command" />
        <element name="globargs" optional="true" />
        <element name="cmdargs" optional="true" />
        <sequential>
            <eclipse.launch app="buckminster">
                <args>
                    <jvmarg value="-Dbugfix.288796=true"/>
                    <arg value="--loglevel" />
                    <arg value="${buckminster.loglevel}" />
                    <arg value="--displaystacktrace" />
                    <globargs />
                    <arg value="@{command}" />
                    <arg value="-P" />
                    <arg value="${properties.tmp}" />
                    <cmdargs />
                </args>
            </eclipse.launch>
        </sequential>
    </macrodef>
	<macrodef name="egf">
        <element name="activities" />
        <element name="globargs" optional="true" />
        <element name="cmdargs" optional="true" />
        <sequential>
            <eclipse.launch app="egf">
                <args>
                    <arg value="-application" />
                    <arg value="org.eclipse.egf.application.activity" />
                    <arg value="-consoleLog" />
                    <globargs />
                    <arg value="-activities" />
                    <activities />
                    <cmdargs />
                </args>
            </eclipse.launch>
        </sequential>
    </macrodef>
	<macrodef name="anteclipse">
        <attribute name="buildfile" default="${relengDir}/build.xml" />
        <attribute name="target" />
        <element name="globargs" optional="true" />
        <sequential>
            <eclipse.launch app="egf">
                <args>
					<arg value="-application" />
					<arg value="org.eclipse.ant.core.antRunner" />
					<arg value="-consoleLog" />
                    <globargs />
					<arg value="-buildfile" />
					<arg value="@{buildfile}" />
					<arg value="@{target}" />
                </args>
            </eclipse.launch>
        </sequential>
    </macrodef>
    <target name="clean.result">
        <delete dir="${result}" failonerror="true" quiet="true" />
    </target>

    <target name="clean.workspace">
        <delete dir="${workspace}" failonerror="true" quiet="true" />
    </target>

    <target name="clean.tools">
        <delete dir="${tools}" failonerror="true" quiet="true" />
    </target>

    <target name="clean.all">
		<antcall target="clean.workspace" />
		<antcall target="clean.result" />
		<antcall target="clean.tools" />
    </target>
	<target name="init" depends="init.build.properties" >
		<echo message="Available variables are : "/>
		<echo message="Builtin $${relengDir} : ${relengDir}" />
		<echo message="Builtin $${build.root} : ${build.root}" />
		<echo message="Builtin $${tools} : ${tools}" />
		<echo message="Builtin $${result} : ${result}" />
		<echo message="Builtin $${publish} : ${publish}" />
		<echo message="Builtin $${workspace} : ${workspace}" />
		<echo message="Builtin $${timestamp} : ${timestamp}" />
		<echo message="Provided $${VERSION} : ${VERSION}" />
		<echo message="Provided $${buildVersion} : ${buildVersion}" />
		<echo message="Provided $${qualifier.replacement.*} : ${qualifier.replacement.*}" />
		<echo message="Provided $${branch} : ${branch}" />
		<echo message="Provided $${capellaGitRepo} : ${capellaGitRepo}" />
		<echo message="Provided $${eclipse.download.prefix} : ${eclipse.download.prefix}" />
		<echo message="Provided $${cloudsmith.download.prefix} : ${cloudsmith.download.prefix}" />
		<echo message="Provided $${polarion.download.prefix} : ${polarion.download.prefix}" />
		<echo message="Provided $${cots.repository.prefix} : ${cots.repository.prefix}" />
		<echo message="Provided $${site_QueryLegacy} : ${site_QueryLegacy}" />
		<echo message="Provided $${site_DiffMerge} : ${site_DiffMerge}" />
		<echo message="Provided $${site_Patterns} : ${site_Patterns}" />
		<echo message="Provided $${site_Kitalpha} : ${site_Kitalpha}" />
	</target>

    <target name="init.build.properties">
        <!-- Echo relevant properties to a temporary file so that Buckminster can read them -->
        <tempfile destdir="${java.io.tmpdir}" prefix="build-" suffix=".properties" deleteonexit="true" property="properties.tmp" />
        <echoproperties destfile="${properties.tmp}">
            <!-- We don't want these. basedir in particular will cause problems if passed explicitly -->
            <propertyset negate="true">
                <propertyref name="basedir" />
                <propertyref name="eclipse.home" />
                <propertyref name="properties.tmp" />
                <propertyref name="line.separator" />
                <propertyref name="path.separator" />
                <propertyref prefix="ant." />
                <propertyref prefix="file." />
                <propertyref prefix="java." />
                <propertyref prefix="sun." />
                <propertyref prefix="user." />
            </propertyset>
        </echoproperties>
    </target>
	
	<target name="all" depends="build4Juno3.8.2" />
	<target name="build4Juno3.8.2" depends="build4Juno3.8.2_Build_UpdSite" />
	<target name="build4Juno3.8.2_Build_UpdSite" depends="build4Juno3.8.2_Build_UpdSite_Build_Capella,build4Juno3.8.2_Build_UpdSite_Publish_Update_Site" />
	<target name="build4Juno3.8.2_Build_UpdSite_Build_Capella" depends="build4Juno3.8.2_Build_UpdSite_Build_Capella_Clean_Result,build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_EFG_Update_Site,build4Juno3.8.2_Build_UpdSite_Build_Capella_Import_All_Capella_Plugins,build4Juno3.8.2_Build_UpdSite_Build_Capella_Reset_TP_Capella,build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_All_Capella_Plugins" />
	<target name="build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_EFG_Update_Site" depends="build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_EFG_Update_Site_Build_EGF_Platform,build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_EFG_Update_Site_Publish_EGF_Platform,build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_EFG_Update_Site_Clean_Workspace,build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_EFG_Update_Site_Clean_Output,build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_EFG_Update_Site_Clean_Temp,build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_EFG_Update_Site_Clean_Tp" />
	<target name="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site" depends="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features,build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Archive_Update_Site" />
	<target name="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features" depends="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features_org.polarsys.capella.core.model.definition.feature,build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features_Publish_Capella,build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features_org.polarsys.capella.core.compare.feature,build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features_Publish_Data_Merged,build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features_Publish_Doc_Developer,build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features_Publish_Doc_User,build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features_Publish_Shared,build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features_Publish_Shared_Base,build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features_Publish_Patterns" />
	<target name="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Archive_Update_Site" depends="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Archive_Update_Site_Capella_Update_Site,build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Archive_Update_Site_Archive_Capella_Update_Site" />
	<target name="build4Juno3.8.2_Build_UpdSite_Build_Capella_Clean_Result" >
		<antcall target="clean.result" />
	</target>
	<target name="build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_EFG_Update_Site_Clean_Workspace" >
		<antcall target="clean.workspace" />
	</target>
    <target name="build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_EFG_Update_Site_Build_EGF_Platform" depends="init,install.buckminster">
        <echo message="Importing projects into workspace ${workspace} and binaries into target platform" />

		<echo message="install JRE ${env.JAVA_HOME}" />
    	<buckminster command="installJRE">
            <cmdargs>
                <arg value="--location" />
                <arg value="${env.JAVA_HOME}" />
            </cmdargs>
        </buckminster>


		<echo message="import target platform" />
        <buckminster command="importtargetdefinition">
            <cmdargs>
                <arg value="--active" />
                <arg value="${relengDir}/buckminster_build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_EFG_Update_Site_Build_EGF_Platform/build.target" />
            </cmdargs>
        </buckminster>
		<echo message="provision : import projects in workspace" />
        <buckminster command="import">
            <!-- Uncomment to debug <globargs><jvmarg value="-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=y"/></globargs> -->
            <cmdargs>
                <arg value="${relengDir}/buckminster_build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_EFG_Update_Site_Build_EGF_Platform/build.mspec" />
            </cmdargs>
        </buckminster>


        <echo message="Invoking all eclipse builders on workspace ${workspace}" />
        <buckminster command="build" >
            <cmdargs>
                <arg value="--clean" />
                <arg value="--thorough" />
            </cmdargs>
		</buckminster>
    </target>

    <target name="build4Juno3.8.2_Build_UpdSite_Build_Capella_Import_All_Capella_Plugins" depends="init,install.buckminster">
        <echo message="Importing projects into workspace ${workspace} and binaries into target platform" />

		<echo message="install JRE ${env.JAVA_HOME}" />
    	<buckminster command="installJRE">
            <cmdargs>
                <arg value="--location" />
                <arg value="${env.JAVA_HOME}" />
            </cmdargs>
        </buckminster>


		<echo message="import target platform" />
        <buckminster command="importtargetdefinition">
            <cmdargs>
                <arg value="--active" />
                <arg value="${relengDir}/buckminster_build4Juno3.8.2_Build_UpdSite_Build_Capella_Import_All_Capella_Plugins/build.target" />
            </cmdargs>
        </buckminster>
		<echo message="provision : import projects in workspace" />
        <buckminster command="import">
            <!-- Uncomment to debug <globargs><jvmarg value="-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=y"/></globargs> -->
            <cmdargs>
                <arg value="${relengDir}/buckminster_build4Juno3.8.2_Build_UpdSite_Build_Capella_Import_All_Capella_Plugins/build.mspec" />
            </cmdargs>
        </buckminster>


        <echo message="No builders invocation specified" />
    </target>

    <target name="build4Juno3.8.2_Build_UpdSite_Build_Capella_Reset_TP_Capella" depends="init,install.buckminster">
        <echo message="Importing projects into workspace ${workspace} and binaries into target platform" />

		<echo message="install JRE ${env.JAVA_HOME}" />
    	<buckminster command="installJRE">
            <cmdargs>
                <arg value="--location" />
                <arg value="${env.JAVA_HOME}" />
            </cmdargs>
        </buckminster>


		<echo message="import target platform" />
        <buckminster command="importtargetdefinition">
            <cmdargs>
                <arg value="--active" />
                <arg value="${relengDir}/buckminster_build4Juno3.8.2_Build_UpdSite_Build_Capella_Reset_TP_Capella/build.target" />
            </cmdargs>
        </buckminster>
		<echo message="provision : import projects in workspace" />
        <buckminster command="import">
            <!-- Uncomment to debug <globargs><jvmarg value="-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=y"/></globargs> -->
            <cmdargs>
                <arg value="${relengDir}/buckminster_build4Juno3.8.2_Build_UpdSite_Build_Capella_Reset_TP_Capella/build.mspec" />
            </cmdargs>
        </buckminster>


        <echo message="No builders invocation specified" />
    </target>

    <target name="build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_All_Capella_Plugins" depends="init,install.buckminster">
        <echo message="Importing projects into workspace ${workspace} and binaries into target platform" />

		<echo message="install JRE ${env.JAVA_HOME}" />
    	<buckminster command="installJRE">
            <cmdargs>
                <arg value="--location" />
                <arg value="${env.JAVA_HOME}" />
            </cmdargs>
        </buckminster>


		<echo message="import target platform" />
        <buckminster command="importtargetdefinition">
            <cmdargs>
                <arg value="--active" />
                <arg value="${relengDir}/buckminster_build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_All_Capella_Plugins/build.target" />
            </cmdargs>
        </buckminster>
		<echo message="provision : import projects in workspace" />
        <buckminster command="import">
            <!-- Uncomment to debug <globargs><jvmarg value="-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=y"/></globargs> -->
            <cmdargs>
                <arg value="${relengDir}/buckminster_build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_All_Capella_Plugins/build.mspec" />
            </cmdargs>
        </buckminster>


        <echo message="Invoking all eclipse builders on workspace ${workspace}" />
        <buckminster command="build" >
            <cmdargs>
                <arg value="--clean" />
                <arg value="--thorough" />
            </cmdargs>
		</buckminster>
    </target>

	<target name="build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_EFG_Update_Site_Publish_EGF_Platform" depends="init,install.buckminster" >

		
		<echo message="Generate Site"/>
		<buckminster command="perform">
			<globargs>
				<arg value="-Dsite.include.top=true"/>
				<arg value="-Dsite.signing=false"/>				
				<arg value="-Dcbi.include.source=true"/>				
			</globargs>
			<cmdargs>
				<arg value="org.polarsys.capella.core.egf.feature:eclipse.feature#site.p2" />
			</cmdargs>
		</buckminster>

		<echo message="Publish site"/>
		<mkdir dir="${publish}/org.polarsys.capella.core.egf.feature/site.p2/"/>
		<copy todir="${publish}/org.polarsys.capella.core.egf.feature/site.p2/">
			<fileset dir="${result}/output">
				<include name="org.polarsys.capella.core.egf.feature*/site.p2/*"/>
				<include name="org.polarsys.capella.core.egf.feature*/site.p2/**"/>
			</fileset>
			<filtermapper>
				<replaceregex pattern=".*site\.p2" replace="" />
			</filtermapper>
		</copy>
		
	</target>

	<target name="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features_org.polarsys.capella.core.model.definition.feature" depends="init,install.buckminster" >

		
		<echo message="Generate Site"/>
		<buckminster command="perform">
			<globargs>
				<arg value="-Dsite.include.top=true"/>
				<arg value="-Dsite.signing=false"/>				
				<arg value="-Dcbi.include.source=true"/>				
			</globargs>
			<cmdargs>
				<arg value="org.polarsys.capella.core.model.definition.feature:eclipse.feature#site.p2" />
			</cmdargs>
		</buckminster>

		<echo message="Publish site"/>
		<mkdir dir="${publish}/org.polarsys.capella.core.model.definition.feature/site.p2/"/>
		<copy todir="${publish}/org.polarsys.capella.core.model.definition.feature/site.p2/">
			<fileset dir="${result}/output">
				<include name="org.polarsys.capella.core.model.definition.feature*/site.p2/*"/>
				<include name="org.polarsys.capella.core.model.definition.feature*/site.p2/**"/>
			</fileset>
			<filtermapper>
				<replaceregex pattern=".*site\.p2" replace="" />
			</filtermapper>
		</copy>
		
	</target>

	<target name="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features_Publish_Capella" depends="init,install.buckminster" >

		
		<echo message="Generate Site"/>
		<buckminster command="perform">
			<globargs>
				<arg value="-Dsite.include.top=true"/>
				<arg value="-Dsite.signing=false"/>				
				<arg value="-Dcbi.include.source=true"/>				
			</globargs>
			<cmdargs>
				<arg value="org.polarsys.capella.core.advance.feature:eclipse.feature#site.p2" />
			</cmdargs>
		</buckminster>

		<echo message="Publish site"/>
		<mkdir dir="${publish}/org.polarsys.capella.core.advance.feature/site.p2/"/>
		<copy todir="${publish}/org.polarsys.capella.core.advance.feature/site.p2/">
			<fileset dir="${result}/output">
				<include name="org.polarsys.capella.core.advance.feature*/site.p2/*"/>
				<include name="org.polarsys.capella.core.advance.feature*/site.p2/**"/>
			</fileset>
			<filtermapper>
				<replaceregex pattern=".*site\.p2" replace="" />
			</filtermapper>
		</copy>
		
	</target>

	<target name="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features_org.polarsys.capella.core.compare.feature" depends="init,install.buckminster" >

		
		<echo message="Generate Site"/>
		<buckminster command="perform">
			<globargs>
				<arg value="-Dsite.include.top=true"/>
				<arg value="-Dsite.signing=false"/>				
				<arg value="-Dcbi.include.source=true"/>				
			</globargs>
			<cmdargs>
				<arg value="org.polarsys.capella.core.compare.feature:eclipse.feature#site.p2" />
			</cmdargs>
		</buckminster>

		<echo message="Publish site"/>
		<mkdir dir="${publish}/org.polarsys.capella.core.compare.feature/site.p2/"/>
		<copy todir="${publish}/org.polarsys.capella.core.compare.feature/site.p2/">
			<fileset dir="${result}/output">
				<include name="org.polarsys.capella.core.compare.feature*/site.p2/*"/>
				<include name="org.polarsys.capella.core.compare.feature*/site.p2/**"/>
			</fileset>
			<filtermapper>
				<replaceregex pattern=".*site\.p2" replace="" />
			</filtermapper>
		</copy>
		
	</target>

	<target name="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features_Publish_Data_Merged" depends="init,install.buckminster" >

		
		<echo message="Generate Site"/>
		<buckminster command="perform">
			<globargs>
				<arg value="-Dsite.include.top=true"/>
				<arg value="-Dsite.signing=false"/>				
				<arg value="-Dcbi.include.source=true"/>				
			</globargs>
			<cmdargs>
				<arg value="org.polarsys.capella.core.data.merged.feature:eclipse.feature#site.p2" />
			</cmdargs>
		</buckminster>

		<echo message="Publish site"/>
		<mkdir dir="${publish}/org.polarsys.capella.core.data.merged.feature/site.p2/"/>
		<copy todir="${publish}/org.polarsys.capella.core.data.merged.feature/site.p2/">
			<fileset dir="${result}/output">
				<include name="org.polarsys.capella.core.data.merged.feature*/site.p2/*"/>
				<include name="org.polarsys.capella.core.data.merged.feature*/site.p2/**"/>
			</fileset>
			<filtermapper>
				<replaceregex pattern=".*site\.p2" replace="" />
			</filtermapper>
		</copy>
		
	</target>

	<target name="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features_Publish_Doc_Developer" depends="init,install.buckminster" >

		
		<echo message="Generate Site"/>
		<buckminster command="perform">
			<globargs>
				<arg value="-Dsite.include.top=true"/>
				<arg value="-Dsite.signing=false"/>				
				<arg value="-Dcbi.include.source=true"/>				
			</globargs>
			<cmdargs>
				<arg value="org.polarsys.capella.core.doc.developer.feature:eclipse.feature#site.p2" />
			</cmdargs>
		</buckminster>

		<echo message="Publish site"/>
		<mkdir dir="${publish}/org.polarsys.capella.core.doc.developer.feature/site.p2/"/>
		<copy todir="${publish}/org.polarsys.capella.core.doc.developer.feature/site.p2/">
			<fileset dir="${result}/output">
				<include name="org.polarsys.capella.core.doc.developer.feature*/site.p2/*"/>
				<include name="org.polarsys.capella.core.doc.developer.feature*/site.p2/**"/>
			</fileset>
			<filtermapper>
				<replaceregex pattern=".*site\.p2" replace="" />
			</filtermapper>
		</copy>
		
	</target>

	<target name="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features_Publish_Doc_User" depends="init,install.buckminster" >

		
		<echo message="Generate Site"/>
		<buckminster command="perform">
			<globargs>
				<arg value="-Dsite.include.top=true"/>
				<arg value="-Dsite.signing=false"/>				
				<arg value="-Dcbi.include.source=true"/>				
			</globargs>
			<cmdargs>
				<arg value="org.polarsys.capella.core.doc.user.feature:eclipse.feature#site.p2" />
			</cmdargs>
		</buckminster>

		<echo message="Publish site"/>
		<mkdir dir="${publish}/org.polarsys.capella.core.doc.user.feature/site.p2/"/>
		<copy todir="${publish}/org.polarsys.capella.core.doc.user.feature/site.p2/">
			<fileset dir="${result}/output">
				<include name="org.polarsys.capella.core.doc.user.feature*/site.p2/*"/>
				<include name="org.polarsys.capella.core.doc.user.feature*/site.p2/**"/>
			</fileset>
			<filtermapper>
				<replaceregex pattern=".*site\.p2" replace="" />
			</filtermapper>
		</copy>
		
	</target>

	<target name="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features_Publish_Shared" depends="init,install.buckminster" >

		
		<echo message="Generate Site"/>
		<buckminster command="perform">
			<globargs>
				<arg value="-Dsite.include.top=true"/>
				<arg value="-Dsite.signing=false"/>				
				<arg value="-Dcbi.include.source=true"/>				
			</globargs>
			<cmdargs>
				<arg value="org.polarsys.capella.shared.feature:eclipse.feature#site.p2" />
			</cmdargs>
		</buckminster>

		<echo message="Publish site"/>
		<mkdir dir="${publish}/org.polarsys.capella.shared.feature/site.p2/"/>
		<copy todir="${publish}/org.polarsys.capella.shared.feature/site.p2/">
			<fileset dir="${result}/output">
				<include name="org.polarsys.capella.shared.feature*/site.p2/*"/>
				<include name="org.polarsys.capella.shared.feature*/site.p2/**"/>
			</fileset>
			<filtermapper>
				<replaceregex pattern=".*site\.p2" replace="" />
			</filtermapper>
		</copy>
		
	</target>

	<target name="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features_Publish_Shared_Base" depends="init,install.buckminster" >

		
		<echo message="Generate Site"/>
		<buckminster command="perform">
			<globargs>
				<arg value="-Dsite.include.top=true"/>
				<arg value="-Dsite.signing=false"/>				
				<arg value="-Dcbi.include.source=true"/>				
			</globargs>
			<cmdargs>
				<arg value="org.polarsys.capella.common.base.feature:eclipse.feature#site.p2" />
			</cmdargs>
		</buckminster>

		<echo message="Publish site"/>
		<mkdir dir="${publish}/org.polarsys.capella.common.base.feature/site.p2/"/>
		<copy todir="${publish}/org.polarsys.capella.common.base.feature/site.p2/">
			<fileset dir="${result}/output">
				<include name="org.polarsys.capella.common.base.feature*/site.p2/*"/>
				<include name="org.polarsys.capella.common.base.feature*/site.p2/**"/>
			</fileset>
			<filtermapper>
				<replaceregex pattern=".*site\.p2" replace="" />
			</filtermapper>
		</copy>
		
	</target>

	<target name="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Publish_Features_Publish_Patterns" depends="init,install.buckminster" >

		
		<echo message="Generate Site"/>
		<buckminster command="perform">
			<globargs>
				<arg value="-Dsite.include.top=true"/>
				<arg value="-Dsite.signing=false"/>				
				<arg value="-Dcbi.include.source=true"/>				
			</globargs>
			<cmdargs>
				<arg value="org.polarsys.capella.patterns.feature:eclipse.feature#site.p2" />
			</cmdargs>
		</buckminster>

		<echo message="Publish site"/>
		<mkdir dir="${publish}/org.polarsys.capella.patterns.feature/site.p2/"/>
		<copy todir="${publish}/org.polarsys.capella.patterns.feature/site.p2/">
			<fileset dir="${result}/output">
				<include name="org.polarsys.capella.patterns.feature*/site.p2/*"/>
				<include name="org.polarsys.capella.patterns.feature*/site.p2/**"/>
			</fileset>
			<filtermapper>
				<replaceregex pattern=".*site\.p2" replace="" />
			</filtermapper>
		</copy>
		
	</target>

	<target name="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Archive_Update_Site_Capella_Update_Site" depends="init,install.egf" >
		<anteclipse target="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Archive_Update_Site_Capella_Update_Site_dropins" />
		<anteclipse target="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Archive_Update_Site_Capella_Update_Site_sitep2" />
	</target>	

	<target name="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Archive_Update_Site_Capella_Update_Site_dropins">
	</target>	

	<target name="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Archive_Update_Site_Capella_Update_Site_sitep2">
		<!-- see http://wiki.eclipse.org/Equinox/p2/Ant_Tasks -->
		<p2.mirror>
			<repository location="file:/${publish}/org.polarsys.capella/site.p2" name="CapellaUpdateSite/org.polarsys.capella" />
			<source>
				<repository location="file:/${publish}/org.polarsys.capella.core.advance.feature/site.p2" />
				<repository location="file:/${publish}/org.polarsys.capella.core.compare.feature/site.p2" />
				<repository location="file:/${publish}/org.polarsys.capella.core.data.merged.feature/site.p2" />
				<repository location="file:/${publish}/org.polarsys.capella.core.doc.developer.feature/site.p2" />
				<repository location="file:/${publish}/org.polarsys.capella.core.doc.user.feature/site.p2" />
				<repository location="file:/${publish}/org.polarsys.capella.shared.feature/site.p2" />
				<repository location="file:/${publish}/org.polarsys.capella.common.base.feature/site.p2" />
				<repository location="file:/${publish}/org.polarsys.capella.patterns.feature/site.p2" />
			</source>
		</p2.mirror>
	</target>
	<target name="build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_EFG_Update_Site_Clean_Output" depends="init">
		<delete dir="${result}/output" >

		</delete>
	</target>

	<target name="build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_EFG_Update_Site_Clean_Temp" depends="init">
		<delete dir="${result}/temp" >

		</delete>
	</target>

	<target name="build4Juno3.8.2_Build_UpdSite_Build_Capella_Build_EFG_Update_Site_Clean_Tp" depends="init">
		<delete dir="${result}/tp" >

		</delete>
	</target>

	<target name="build4Juno3.8.2_Build_UpdSite_Publish_Update_Site_Archive_Update_Site_Archive_Capella_Update_Site" depends="init">
		<zip destfile="${publish}/capella-${buildVersion}-updatesite.zip" basedir="${publish}/org.polarsys.capella/site.p2"  >

		</zip>
	</target>

</project>