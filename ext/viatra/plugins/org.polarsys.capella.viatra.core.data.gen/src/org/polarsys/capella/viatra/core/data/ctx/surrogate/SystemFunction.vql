/*******************************************************************************
 * Copyright (c) 2006, 2019 THALES DMS FRANCE.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Thales - initial API and implementation
 *******************************************************************************/

/* Generated file */

package org.polarsys.capella.viatra.core.data.ctx.surrogate

import "http://www.polarsys.org/capella/core/ctx/1.3.0"

// Start of user code for imports 
import "http://www.polarsys.org/capella/common/core/1.3.0"
import "http://www.polarsys.org/capella/core/fa/1.3.0"
import "http://www.polarsys.org/capella/core/oa/1.3.0"
import "http://www.polarsys.org/capella/core/la/1.3.0"

// End of user code

@Surrogate(feature="allocatorActors")
pattern SystemFunction__allocatorActors(self : SystemFunction, target : Actor) {
	ComponentFunctionalAllocation.targetElement(cfa, self);
ComponentFunctionalAllocation.sourceElement(cfa, target);
}

@Surrogate(feature="allocatorSystems")
pattern SystemFunction__allocatorSystems(self : SystemFunction, target : System) {
	ComponentFunctionalAllocation.targetElement(cfa, self);
ComponentFunctionalAllocation.sourceElement(cfa, target);
}

@Surrogate(feature="realizedOperationalActivities")
pattern SystemFunction__realizedOperationalActivities(self : SystemFunction, target : OperationalActivity) {
	SystemFunction.outFunctionRealizations.allocatedFunction(self, target);
}

@Surrogate(feature="realizingLogicalFunctions")
pattern SystemFunction__realizingLogicalFunctions(self : SystemFunction, target : LogicalFunction) {
	SystemFunction.inFunctionRealizations.allocatingFunction(self, target);
}

@Surrogate(feature="containedSystemFunctions")
pattern SystemFunction__containedSystemFunctions(self : SystemFunction, target : SystemFunction) {
	SystemFunction.ownedFunctions(self, target);
}

@Surrogate(feature="childrenSystemFunctions")
pattern SystemFunction__childrenSystemFunctions(self : SystemFunction, target : SystemFunction) {
	SystemFunction.subFunctions(self, target);
}


