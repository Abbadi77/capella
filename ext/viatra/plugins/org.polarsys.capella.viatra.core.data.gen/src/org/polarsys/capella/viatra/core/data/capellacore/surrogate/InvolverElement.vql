/*******************************************************************************
 * Copyright (c) 2006, 2019 THALES DMS FRANCE.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Thales - initial API and implementation
 *******************************************************************************/

/* Generated file */

package org.polarsys.capella.viatra.core.data.capellacore.surrogate

import "http://www.polarsys.org/capella/core/core/1.4.0"

// Start of user code for imports 
import "http://www.polarsys.org/capella/core/interaction/1.4.0"
import "http://www.polarsys.org/capella/core/ctx/1.4.0"
import "http://www.polarsys.org/capella/core/la/1.4.0"
import "http://www.polarsys.org/capella/core/fa/1.4.0"
import "http://www.polarsys.org/capella/core/cs/1.4.0"
import "http://www.polarsys.org/capella/core/oa/1.4.0"

// End of user code

@Surrogate(feature="involvedInvolvements")
pattern InvolverElement__involvedInvolvements(self : InvolverElement, target : Involvement) {
	AbstractCapability.ownedAbstractFunctionAbstractCapabilityInvolvements(self, target);
	} or {	AbstractCapability.ownedFunctionalChainAbstractCapabilityInvolvements(self, target);
	} or {	Capability.ownedActorCapabilityInvolvements(self, target);
	} or {	Capability.ownedSystemCapabilityInvolvement(self, target);
	} or {	CapabilityRealization.ownedActorCapabilityRealizations(self, target);
	} or {	CapabilityRealization.ownedSystemComponentCapabilityRealizations(self, target);
	} or {	OperationalCapability.ownedEntityOperationalCapabilityInvolvements(self, target);
	} or {	FunctionalChain.ownedFunctionalChainInvolvements(self, target);
	} or {	Mission.ownedActorMissionInvolvements(self, target);
	} or {	Mission.ownedSystemMissionInvolvement(self, target);
	} or {	PhysicalPath.ownedPhysicalPathInvolvements(self, target);

}


