/*******************************************************************************
 * Copyright (c) 2006, 2019 THALES DMS FRANCE.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Thales - initial API and implementation
 *******************************************************************************/

/* Generated file */

package org.polarsys.capella.viatra.core.data.capellacommon.surrogate

import "http://www.polarsys.org/capella/core/common/1.3.0"

// Start of user code for imports 

// End of user code

@Surrogate(feature="realizedAbstractStates")
pattern AbstractState__realizedAbstractStates(self : AbstractState, target : AbstractState) {
	AbstractStateRealization.realizingAbstractState(asr, self);
AbstractStateRealization.realizedAbstractState(asr, target);

}

@Surrogate(feature="realizingAbstractStates")
pattern AbstractState__realizingAbstractStates(self : AbstractState, target : AbstractState) {
	AbstractStateRealization.realizedAbstractState(asr, self);
AbstractStateRealization.realizingAbstractState(asr, target);

}

@Surrogate(feature="outgoing")
pattern AbstractState__outgoing(self : AbstractState, target : StateTransition) {
	StateTransition.source(target, self);
}

@Surrogate(feature="incoming")
pattern AbstractState__incoming(self : AbstractState, target : StateTransition) {
	StateTransition.target(target, self);
}

@Surrogate(feature="involverRegions")
pattern AbstractState__involverRegions(self : AbstractState, target : Region) {
	Region.involvedStates(target, self);
}


