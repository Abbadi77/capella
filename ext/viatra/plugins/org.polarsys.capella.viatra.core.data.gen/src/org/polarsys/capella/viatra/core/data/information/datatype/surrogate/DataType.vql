/*******************************************************************************
 * Copyright (c) 2006, 2019 THALES DMS FRANCE.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Thales - initial API and implementation
 *******************************************************************************/

/* Generated file */

package org.polarsys.capella.viatra.core.data.information.datatype.surrogate

import "http://www.polarsys.org/capella/core/information/datatype/1.3.0"

// Start of user code for imports 
import "http://www.polarsys.org/capella/core/information/datavalue/1.3.0"
import "http://www.polarsys.org/capella/core/information/1.3.0"
import "http://www.polarsys.org/capella/common/core/1.3.0"

// End of user code

@Surrogate(feature="defaultValue")
pattern DataType__defaultValue(self : DataType, target : DataValue) {
	BooleanType.ownedDefaultValue(self, target);
} or {
	StringType.ownedDefaultValue(self, target);
} or {
	Enumeration.ownedDefaultValue(self, target);
} or {
	NumericType.ownedDefaultValue(self, target);
} or {
	PhysicalQuantity.ownedDefaultValue(self, target);


}

@Surrogate(feature="nullValue")
pattern DataType__nullValue(self : DataType, target : DataValue) {
	StringType.ownedDefaultValue(self, target);
} or {
	Enumeration.ownedDefaultValue(self, target);
} or {
	NumericType.ownedDefaultValue(self, target);
} or {
	PhysicalQuantity.ownedDefaultValue(self, target);


}

@Surrogate(feature="realizedDataTypes")
pattern DataType__realizedDataTypes(self : DataType, target : DataType) {
	DataType.outgoingTraces(self, ir);
InformationRealization.targetElement(ir, target); 
}

@Surrogate(feature="realizingDataTypes")
pattern DataType__realizingDataTypes(self : DataType, target : DataType) {
	DataType.incomingTraces(self, ir);
InformationRealization.sourceElement(ir, target); 
}


